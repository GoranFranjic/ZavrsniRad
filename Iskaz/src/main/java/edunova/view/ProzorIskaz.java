/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package edunova.view;


import edunova.model.Artikal;
import edunova.model.Djelatnik;
import edunova.model.Iskaz;
import javax.swing.JOptionPane;
import edunova.util.Alati;
import edunova.util.EdunovaException;
import edunova.util.HibernateUtil;
import jakarta.persistence.criteria.CriteriaBuilder;
import jakarta.persistence.criteria.CriteriaQuery;
import jakarta.persistence.criteria.Root;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.math.BigDecimal;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import org.hibernate.HibernateException;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;

/**
 *
 * @author goran
 */
public class ProzorIskaz extends javax.swing.JFrame {

       private int trenutniRedak = -1;
       private Iskaz trenutniIskaz = null;


    public ProzorIskaz() {
        initComponents();
        setTitle(Alati.NAZIV_APP + " | ISKAZ");
        

String[] columnNames = {"ID Iskaza", "Artikal ID", "Datum", "Djelatnik ID"};
     
        Object[][] data = {};
// Kod za kreiranje modela za jTable
DefaultTableModel model = new DefaultTableModel(data, columnNames) {
    @Override
    public boolean isCellEditable(int row, int column) {
        return true; // Omogućuje uređivanje svih ćelija
    }
};

jTable1.setModel(model);

jTable1.setDefaultEditor(Object.class, null);

     }
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        txtDatum = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtArtikal = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtDjelatnik = new javax.swing.JTextField();
        jButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel2.setText("Datum");

        txtDatum.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDatumKeyPressed(evt);
            }
        });

        jLabel3.setText("Artikal");

        txtArtikal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtArtikalKeyPressed(evt);
            }
        });

        jLabel4.setText("Djelatnik");

        txtDjelatnik.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDjelatnikActionPerformed(evt);
            }
        });
        txtDjelatnik.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDjelatnikKeyPressed(evt);
            }
        });

        jButton.setText("Dodaj");
        jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jTable1InputMethodTextChanged(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        jButton1.setText("Prikaži");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Izmjeni");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Spremi izmjene");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Brisanje");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(txtArtikal)
                            .addComponent(txtDatum)
                            .addComponent(txtDjelatnik))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDjelatnik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtArtikal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtDatumKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDatumKeyPressed
       if (evt.getKeyCode()==KeyEvent.VK_ENTER)
                         txtDjelatnik.requestFocus();
    }//GEN-LAST:event_txtDatumKeyPressed

    private void txtArtikalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtArtikalKeyPressed
       if (evt.getKeyCode()==KeyEvent.VK_ENTER)
                         jButtonActionPerformed(null);
    }//GEN-LAST:event_txtArtikalKeyPressed

    private void txtDjelatnikKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDjelatnikKeyPressed
       if (evt.getKeyCode()==KeyEvent.VK_ENTER)
                         txtArtikal.requestFocus();
    }//GEN-LAST:event_txtDjelatnikKeyPressed

    private void txtDjelatnikActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDjelatnikActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDjelatnikActionPerformed

    private void jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonActionPerformed
                                       
   
 
    String datumString = txtDatum.getText();
    Date datum = null; // Datum kao java.util.Date
    int djelatnikId = Integer.parseInt(txtDjelatnik.getText());
    int artikalId = Integer.parseInt(txtArtikal.getText());

      
   // Pretvaranje datuma iz Stringa u Date
    try {
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        datum = sdf.parse(datumString);
    } catch (ParseException ex) {
        // Obrada iznimke ako je String neispravan datum
        ex.printStackTrace();
    }

    // Stvaranje objekta Iskaz
    Iskaz iskaz = new Iskaz();
    iskaz.setDatum(datum);
    iskaz.setDjelatnikId(djelatnikId);
    iskaz.setArtikalId(artikalId);

    // Spremanje objekta u bazu podataka pomoću Hibernatea
    try {
        SessionFactory sessionFactory = HibernateUtil.getSessionFactory();
        try (Session session = sessionFactory.openSession()) {
            session.beginTransaction();
            session.save(iskaz); // Spremi iskaz u bazu podataka
            session.getTransaction().commit();
        }

        JOptionPane.showMessageDialog(this, "Iskaz uspješno spremljen u bazu.");
    } catch (HeadlessException | HibernateException e) {
        JOptionPane.showMessageDialog(this, "Greška prilikom spremanja iskaza: " + e.getMessage());
    }
           
    }//GEN-LAST:event_jButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

    DefaultTableModel model = new DefaultTableModel();
    model.addColumn("ID Iskaza");
    model.addColumn("Artikal");
    model.addColumn("Datum");
    model.addColumn("Djelatnik");

    Session session = HibernateUtil.getSessionFactory().openSession();
    session.beginTransaction();

    CriteriaBuilder builder = session.getCriteriaBuilder();
    CriteriaQuery<Iskaz> criteria = builder.createQuery(Iskaz.class);
    Root<Iskaz> root = criteria.from(Iskaz.class);
    criteria.select(root);

    List<Iskaz> iskazi = session.createQuery(criteria).getResultList();

    for (Iskaz iskaz : iskazi) {
        model.addRow(new Object[]{iskaz.getId_iskaza(), iskaz.getArtikalId(), iskaz.getDatum(), iskaz.getDjelatnikId()});
    }

    session.getTransaction().commit();
    session.close();

    jTable1.setModel(model);

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1InputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jTable1InputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1InputMethodTextChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
      
                                           
    int selectedRow = jTable1.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Nije odabran redak za uređivanje.");
        return;
    }

    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

    // Dohvatite podatke iz odabranog retka
    int idIskaza = (int) model.getValueAt(selectedRow, 0); // ID Iskaza
    int artikalId = (int) model.getValueAt(selectedRow, 1); // Artikal ID
    Date datum = (Date) model.getValueAt(selectedRow, 2); // Datum
    int djelatnikId = (int) model.getValueAt(selectedRow, 3); // Djelatnik ID

    // Postavite trenutni redak i podatke za uređivanje
    trenutniRedak = selectedRow;
    trenutniIskaz = new Iskaz();
    trenutniIskaz.setId_iskaza(idIskaza);
    trenutniIskaz.setArtikalId(artikalId);
    trenutniIskaz.setDatum(datum);
    trenutniIskaz.setDjelatnikId(djelatnikId);

    // Postavite podatke u odgovarajuća polja za uređivanje
    txtDatum.setText(new SimpleDateFormat("yyyy-MM-dd").format(datum));
    txtDjelatnik.setText(String.valueOf(djelatnikId));
    txtArtikal.setText(String.valueOf(artikalId));


        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        
       
    if (trenutniRedak != -1 && trenutniIskaz != null) {
        // Dohvatite nove vrijednosti iz polja za uređivanje
        String datumString = txtDatum.getText();
        int djelatnikId = Integer.parseInt(txtDjelatnik.getText());
        int artikalId = Integer.parseInt(txtArtikal.getText());

        // Pretvaranje datuma iz Stringa u Date
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            Date datum = sdf.parse(datumString);

            // Ažurirajte podatke u modelu
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setValueAt(datum, trenutniRedak, 2);
            model.setValueAt(djelatnikId, trenutniRedak, 3);
            model.setValueAt(artikalId, trenutniRedak, 1);

            // Ako je potrebno, ažurirajte podatke u bazi podataka
            trenutniIskaz.setDatum(datum);
            trenutniIskaz.setDjelatnikId(djelatnikId);
            trenutniIskaz.setArtikalId(artikalId);

            // Ovdje dodajte kod za spremanje u bazu podataka

            // Obrišite trenutne podatke
            trenutniRedak = -1;
            trenutniIskaz = null;

            // Očistite polja za uređivanje
            txtDatum.setText("");
            txtDjelatnik.setText("");
            txtArtikal.setText("");
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(this, "Neispravan format datuma.");
        }
    }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
       
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow >= 0) {
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            int idIskaza = (int) model.getValueAt(selectedRow, 0);

            // Pozovite funkciju za brisanje u bazi podataka (Hibernate)
            Session session = HibernateUtil.getSessionFactory().openSession();
  
            Transaction tx = session.beginTransaction();
            Iskaz iskaz = session.get(Iskaz.class, idIskaza);
            if (iskaz != null) {
                session.delete(iskaz);
                tx.commit();
                session.close();
                // Ažurirajte model tablice
                model.removeRow(selectedRow);
            } else {
                session.close();
                JOptionPane.showMessageDialog(null, "Iskaz s ID-om " + idIskaza + " ne postoji.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Niste odabrali redak za brisanje.");
        
        };

        Session session = HibernateUtil.getSessionFactory().openSession();
    session.beginTransaction();
        
        
    }//GEN-LAST:event_jButton4ActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtArtikal;
    private javax.swing.JTextField txtDatum;
    private javax.swing.JTextField txtDjelatnik;
    // End of variables declaration//GEN-END:variables

    private void ucitaj() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    

  
}
